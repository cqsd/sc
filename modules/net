#!/bin/bash
### Network shortcuts

source $__sc_CONFIG_DIR/net

_net_cert-chain() { ### get the cert chain for a TLS endpoint
    if [ $# -lt 1 ]; then
        echo 'usage: net cert-chain DOMAIN [PORT]'
        exit 1
    fi
    domain=$1
    port=${2:-443}
    openssl s_client -connect $domain:$port </dev/null 2>/dev/null
}

_net_serve() { ### serve a directory
    if [ $# -lt 1 ]; then
        echo 'usage: serve [DIR [PORT]]'
        exit 1
    fi
    dir=${1:-.}
    port=${2:-8000}
    __sc_info serving $dir on http://localhost:$port

    python3 -m http.server --directory $dir $port
}

__sc_net_parse_ifconfig() {
    grep 'inet\b' | awk '{ print $2 }' | cut -d/ -f1
}

_net_show-ip() { ### show IP of specified interface
    if [ $# -ne 1 ]; then
        echo 'usage: show-ip IFNAME'
        exit 1
    fi

    if hash ifconfig 2>/dev/null; then
        ifconfig $1 | __sc_net_parse_ifconfig
    elif hash ip 2>/dev/null; then
        ip addr show $1 | __sc_net_parse_ifconfig
    else
        echo no ifconfig or ip, todo
    fi
}

_net_arp() { ### show all ARP table entries (IPs only)
    arp -a | grep -o '\([0-9]\+\.\?\)\{4\}' | sort | uniq
}

_net_chrome() { ### start chrome
    if [ -z "${CHROME_EXECUTABLE_PATH}" ]; then
        echo please set CHROME_EXECUTABLE_PATH in env or $__sc_BASEDIR/config/net
        exit 1
    fi
    "${CHROME_EXECUTABLE_PATH}" \
        --args \
        $@
}

_net_chrome-proxy() { ### start unsafe chrome with proxy
    if [ $# -ne 1 ]; then
        echo usage: chrome-proxy PROXY_ADDR
        echo example: chrome-proxy localhost:8080
        exit 1
    fi

    data_dir=$(mktemp -d)
    trap "rm -fr $data_dir" SIGINT EXIT

    proxy_host=$1
    _net_chrome \
        --proxy-server="${proxy_host}" \
        --disable-web-security \
        --user-data-dir="$data_dir" \
        --disk-cache-size=0 \
        --ignore-certificate-errors
}
